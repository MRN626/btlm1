<?php
/* 
 * Generated by CRUDigniter v3.2 
 * www.crudigniter.com
 */
 
class Agent_controller extends CI_Controller{
    function __construct()
    {
        parent::__construct();
        $this->load->model('Agent_model');
    } 

    /*
     * Listing of tb_agent
     */
    function index()
    {
        $params['limit'] = RECORDS_PER_PAGE; 
        $params['offset'] = ($this->input->get('per_page')) ? $this->input->get('per_page') : 0;
        
        $config = $this->config->item('pagination');
        $config['base_url'] = site_url('tb_agent/index?');
        $config['total_rows'] = $this->Agent_model->get_all_tb_agent_count();
        $this->pagination->initialize($config);

        $data['tb_agent'] = $this->Agent_model->get_all_tb_agent($params);
        
        $data['_view'] = 'agent/index';
        $this->load->view('layouts/main',$data);
    }

    /*
     * Adding a new tb_agent
     */
    function add()
    {   
        $this->load->library('form_validation');

		$this->form_validation->set_rules('password','Password','required|max_length[10]');
		$this->form_validation->set_rules('niveau_acces','Niveau Acces','required|integer');
		$this->form_validation->set_rules('date_creation','Date Creation','required');
		$this->form_validation->set_rules('nom_complet','Nom Complet','required|max_length[75]');
		$this->form_validation->set_rules('departement','Departement','max_length[75]');
		$this->form_validation->set_rules('fonction','Fonction','max_length[75]');
		$this->form_validation->set_rules('telephone','Telephone','max_length[15]');
		
		if($this->form_validation->run())     
        {   
            $params = array(
				'password' => $this->input->post('password'),
				'niveau_acces' => $this->input->post('niveau_acces'),
				'date_creation' => date('Y-m-d H:i:s'),
				'nom_complet' => $this->input->post('nom_complet'),
				'departement' => $this->input->post('departement'),
				'fonction' => $this->input->post('fonction'),
				'telephone' => $this->input->post('telephone'),
				'avatar' => $this->input->post('avatar'),
            );
            
            $tb_agent_id = $this->Agent_model->add_tb_agent($params);
            redirect('agent_controller/index');
        }
        else
        {            
            $data['_view'] = 'agent/add';
            $this->load->view('layouts/main',$data);
        }
    }  

    /*
     * Editing a tb_agent
     */
    function edit($agent_id)
    {   
        // check if the tb_agent exists before trying to edit it
        $data['tb_agent'] = $this->Agent_model->get_tb_agent($agent_id);
        
        if(isset($data['tb_agent']['agent_id']))
        {
            $this->load->library('form_validation');

			$this->form_validation->set_rules('password','Password','required|max_length[10]');
			$this->form_validation->set_rules('niveau_acces','Niveau Acces','required|integer');
			$this->form_validation->set_rules('date_creation','Date Creation','required');
			$this->form_validation->set_rules('nom_complet','Nom Complet','required|max_length[75]');
			$this->form_validation->set_rules('departement','Departement','max_length[75]');
			$this->form_validation->set_rules('fonction','Fonction','max_length[75]');
			$this->form_validation->set_rules('telephone','Telephone','max_length[15]');
		
			if($this->form_validation->run())     
            {   
                $params = array(
					'password' => $this->input->post('password'),
					'niveau_acces' => $this->input->post('niveau_acces'),
					'date_creation' => $this->input->post('date_creation'),
					'nom_complet' => $this->input->post('nom_complet'),
					'departement' => $this->input->post('departement'),
					'fonction' => $this->input->post('fonction'),
					'telephone' => $this->input->post('telephone'),
					'avatar' => $this->input->post('avatar'),
                );

                $this->Agent_model->update_tb_agent($agent_id,$params);            
                redirect('agent_controller/index');
            }
            else
            {
                $data['_view'] = 'agent/edit';
                $this->load->view('layouts/main',$data);
            }
        }
        else
            show_error('The tb_agent you are trying to edit does not exist.');
    } 

    /*
     * Deleting tb_agent
     */
    function remove($agent_id)
    {
        $tb_agent = $this->Agent_model->get_tb_agent($agent_id);

        // check if the tb_agent exists before trying to delete it
        if(isset($tb_agent['agent_id']))
        {
            $this->Agent_model->delete_tb_agent($agent_id);
            redirect('agent_controller/index');
        }
        else
            show_error('The tb_agent you are trying to delete does not exist.');
    }
    
}
