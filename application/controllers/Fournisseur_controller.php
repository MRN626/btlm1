<?php
/* 
 * Generated by CRUDigniter v3.2 
 * www.crudigniter.com
 */
 
class Fournisseur_controller extends CI_Controller{
    function __construct()
    {
        parent::__construct();
        $this->load->model('Fournisseur_model');
    } 

    /*
     * Listing of tb_fournisseur
     */
    function index()
    {
        $params['limit'] = RECORDS_PER_PAGE; 
        $params['offset'] = ($this->input->get('per_page')) ? $this->input->get('per_page') : 0;
        
        $config = $this->config->item('pagination');
        $config['base_url'] = site_url('tb_fournisseur/index?');
        $config['total_rows'] = $this->Fournisseur_model->get_all_tb_fournisseur_count();
        $this->pagination->initialize($config);

        $data['tb_fournisseur'] = $this->Fournisseur_model->get_all_tb_fournisseur($params);
        
        $data['_view'] = 'fournisseur/index';
        $this->load->view('layouts/main',$data);
    }

    /*
     * Adding a new tb_fournisseur
     */
    function add()
    {   
        if(isset($_POST) && count($_POST) > 0)     
        {   
            $params = array(
				'nom_fournisseur' => $this->input->post('nom_fournisseur'),
				'evaluation_founisseur' => $this->input->post('evaluation_founisseur'),
				'adresse_fournisseur' => $this->input->post('adresse_fournisseur'),
				'telephone_founisseur' => $this->input->post('telephone_founisseur'),
            );
            
            $tb_fournisseur_id = $this->Fournisseur_model->add_tb_fournisseur($params);
            redirect('fournisseur_controller/index');
        }
        else
        {            
            $data['_view'] = 'fournisseur/add';
            $this->load->view('layouts/main',$data);
        }
    }  

    /*
     * Editing a tb_fournisseur
     */
    function edit($fournisseur_id)
    {   
        // check if the tb_fournisseur exists before trying to edit it
        $data['tb_fournisseur'] = $this->Fournisseur_model->get_tb_fournisseur($fournisseur_id);
        
        if(isset($data['tb_fournisseur']['fournisseur_id']))
        {
            if(isset($_POST) && count($_POST) > 0)     
            {   
                $params = array(
					'nom_fournisseur' => $this->input->post('nom_fournisseur'),
					'evaluation_founisseur' => $this->input->post('evaluation_founisseur'),
					'adresse_fournisseur' => $this->input->post('adresse_fournisseur'),
					'telephone_founisseur' => $this->input->post('telephone_founisseur'),
                );

                $this->Fournisseur_model->update_tb_fournisseur($fournisseur_id,$params);            
                redirect('fournisseur_controller/index');
            }
            else
            {
                $data['_view'] = 'fournisseur/edit';
                $this->load->view('layouts/main',$data);
            }
        }
        else
            show_error('The tb_fournisseur you are trying to edit does not exist.');
    } 

    /*
     * Deleting tb_fournisseur
     */
    function remove($fournisseur_id)
    {
        $tb_fournisseur = $this->Fournisseur_model->get_tb_fournisseur($fournisseur_id);

        // check if the tb_fournisseur exists before trying to delete it
        if(isset($tb_fournisseur['fournisseur_id']))
        {
            $this->Fournisseur_model->delete_tb_fournisseur($fournisseur_id);
            redirect('fournisseur_controller/index');
        }
        else
            show_error('The tb_fournisseur you are trying to delete does not exist.');
    }
    
}
